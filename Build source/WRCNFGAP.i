/*
	WRCNFGAP.i
	Copyright (C) 2007 Paul C. Pratt

	You can redistribute this file and/or modify it under the terms
	of version 2 of the GNU General Public License as published by
	the Free Software Foundation.  You should have received a copy
	of the license along with this file; see the file COPYING.

	This file is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	license for more details.
*/

/*
	WRite "CNFGrAPi.h"
*/

LOCALPROC WriteCommonCNFGRAPI(void)
{
	if (WriteOpenDestFile(&SrcDirR, "CNFGRAPI", ".h")) { /* C API Configuration file */

#if SupportWinIDE
	if (cur_ide == gbk_ide_msv) {
		if (ide_vers >= 8000) {
			WriteDestFileLn("#define _CRT_SECURE_NO_DEPRECATE 1");
			WriteBlankLineToDestFile();
		}
		WriteDestFileLn("/* ignore warning generated by system includes */");
		if (ide_vers >= 6000) {
			WriteDestFileLn("#pragma warning(push)");
		}
		WriteDestFileLn("#pragma warning(disable : 4201 4115 4214)");
		WriteBlankLineToDestFile();
	}
#endif

	if ((cur_targ == gbk_targ_mach) || (cur_targ == gbk_targ_imch)) {
		/* kIdeMW8 or kIdeBashGcc or kIdeAPB */
#if support_ide_mw8
		if (cur_ide == gbk_ide_mw8) {
			WriteDestFileLn("#include <MSL MacHeadersMach-O.h>");
		}
#endif
		WriteDestFileLn("#include <Carbon/Carbon.h>");
#if UseOpenGLinOSX
		WriteDestFileLn("#include <AGL/agl.h>");
#endif
#if UseMachinOSX
		WriteDestFileLn("#include <mach/mach_interface.h>");
		WriteDestFileLn("#include <mach/mach_port.h>");
#endif
	} else if (gbo_apifam == gbk_apifam_xwn) {
		WriteDestFileLn("#include <stdio.h>");
		WriteDestFileLn("#include <stdlib.h>");
		WriteDestFileLn("#include <string.h>");
		WriteDestFileLn("#include <time.h>");
		WriteDestFileLn("#include <sys/time.h>");
		WriteDestFileLn("#include <sys/times.h>");
		WriteDestFileLn("#include <X11/Xlib.h>");
		WriteDestFileLn("#include <X11/Xutil.h>");
		WriteDestFileLn("#include <X11/keysym.h>");
		WriteDestFileLn("#include <X11/keysymdef.h>");
		WriteDestFileLn("#include <X11/Xatom.h>");
		if (MySoundEnabled) {
			WriteDestFileLn("#include <alsa/asoundlib.h>");
		}
	} else if (cur_targ == gbk_targ_carb) {
		/* kIdeMW8 or kIdeMPW3_6_a1 */
#if support_ide_mw8
		if (cur_ide == gbk_ide_mw8) {
			WriteDestFileLn("#include <MacHeadersCarbon.h>");
		} else
#endif
		{
			WriteDestFileLn("#include <Carbon.h>");
			WriteDestFileLn("#include <stdlib.h>");
			WriteDestFileLn("#include <string.h>");
#if UseOpenGLinOSX
			WriteDestFileLn("#include <agl.h>");
#endif
		}
		WriteDestFileLn("#define UsingCarbonLib 1");
	} else if (gbo_apifam == gbk_apifam_win) {
#if support_ide_mw8
		if (cur_ide == gbk_ide_mw8) {
			WriteDestFileLn("#include <Win32Headers.h>");
		} else
#endif
		{
			WriteDestFileLn("#include <windows.h>");
			WriteDestFileLn("#include <time.h>");
#if SupportWinIDE
			if (cur_ide == gbk_ide_lcc) {
				WriteDestFileLn("#include <shellapi.h>");
				WriteDestFileLn("#include <mmsystem.h>");
			}
#endif
		}
		WriteDestFileLn("#include <shlobj.h>");
		WriteDestFileLn("#include <tchar.h>");
		if ((gbk_targ_wcar == cur_targ) || (gbk_targ_wc86 == cur_targ)) {
			WriteDestFileLn("#include <aygshell.h>");
			WriteDestFileLn("#include <commdlg.h>");
		}
	} else {
#if support_ide_mw8
		if (cur_ide == gbk_ide_mw8) {
			WriteDestFileLn("#include <MacHeaders.h>");
			WriteDestFileLn("#include <CursorDevices.h>");
			WriteDestFileLn("#define ShouldDefineQDGlobals 0");
		} else
#endif
		if (cur_ide == gbk_ide_mpw) {
			WriteDestFileLn("#include <MacTypes.h>");
			if (gbo_cpufam != gbk_cpufam_68k) {
				WriteDestFileLn("#include <MixedMode.h>");
			}
			WriteDestFileLn("#include <Gestalt.h>");
			WriteDestFileLn("#include <MacErrors.h>");
			WriteDestFileLn("#include <MacMemory.h>");
			WriteDestFileLn("#include <OSUtils.h>");
			WriteDestFileLn("#include <QuickdrawText.h>");
			WriteDestFileLn("#include <QuickDraw.h>");
			if (gbo_cpufam == gbk_cpufam_68k) {
				WriteDestFileLn("#include <SegLoad.h>");
			}
			WriteDestFileLn("#include <IntlResources.h>");
			WriteDestFileLn("#include <Events.h>");
			WriteDestFileLn("#include <Script.h>");
			WriteDestFileLn("#include <Files.h>");
			WriteDestFileLn("#include <Resources.h>");
			WriteDestFileLn("#include <Fonts.h>");
			WriteDestFileLn("#include <TextUtils.h>");
			WriteDestFileLn("#include <FixMath.h>");
			WriteDestFileLn("#include <ToolUtils.h>");
			WriteDestFileLn("#include <Menus.h>");
			WriteDestFileLn("#include <Scrap.h>");
			WriteDestFileLn("#include <Controls.h>");
			WriteDestFileLn("#include <ControlDefinitions.h>");
			WriteDestFileLn("#include <AppleEvents.h>");
			WriteDestFileLn("#include <Processes.h>");
			WriteDestFileLn("#include <EPPC.h>");
			WriteDestFileLn("#include <MacWindows.h>");
			WriteDestFileLn("#include <TextEdit.h>");
			WriteDestFileLn("#include <Dialogs.h>");
			WriteDestFileLn("#include <Devices.h>");
			WriteDestFileLn("#include <Palettes.h>");
			WriteDestFileLn("#include <StandardFile.h>");
			WriteDestFileLn("#include <Aliases.h>");
			WriteDestFileLn("#include <Folders.h>");
			WriteDestFileLn("#include <Balloons.h>");
			WriteDestFileLn("#include <DiskInit.h>");
			WriteDestFileLn("#include <LowMem.h>");
			WriteDestFileLn("#include <Appearance.h>");
			WriteDestFileLn("#include <Navigation.h>");
			WriteDestFileLn("#include <Sound.h>");
			WriteDestFileLn("#include <CursorDevices.h>");
			WriteDestFileLn("#include <Traps.h>");
		}
	}

	if (gbo_cpufam == gbk_cpufam_68k) {
		if (cur_ide == gbk_ide_mpw) {
			WriteBlankLineToDestFile();
			WriteDestFileLn("#define ShouldUnloadDataInit 1");
			WriteDestFileLn("#define Windows85APIAvail 0");
		}
	}

	if (HaveMacBundleApp) {
		WriteDestFileLn("#define MyAppIsBundle 1");
	}
	if (gbo_apifam == gbk_apifam_win) {
		if (WantIconMaster) {
			WriteDestFileLn("#define InstallFileIcons 1");
		}
	}
	if ((gbo_apifam == gbk_apifam_mac) || (gbo_apifam == gbk_apifam_osx)) {
		WriteBlankLineToDestFile();
		WriteBgnDestFileLn();
		WriteCStrToDestFile("#define kMacCreatorSig ");
		WriteSingleQuoteToDestFile();
		WriteCStrToDestFile(kMacCreatorSig);
		WriteSingleQuoteToDestFile();
		WriteEndDestFileLn();
	}

#ifdef Have_SPCNFGAP
	WriteAppSpecificCNFGRAPIoptions();
#endif

#if SupportWinIDE
	if ((cur_ide == gbk_ide_msv) && (ide_vers >= 6000)) {
		WriteBlankLineToDestFile();
		WriteDestFileLn("/* restore warnings */");
		WriteDestFileLn("#pragma warning(pop)");
	}
#endif

	WriteCloseDestFile();
	}
}
