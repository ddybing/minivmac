/*
	WRBGCFLS.i
	Copyright (C) 2007 Paul Pratt

	You can redistribute this file and/or modify it under the terms
	of version 2 of the GNU General Public License as published by
	the Free Software Foundation.  You should have received a copy
	of the license along with this file; see the file COPYING.

	This file is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	license for more details.
*/

/*
	WRite Bash Gnu C specific FiLes
*/

#pragma segment BashGccSupport

LOCALPROC DoSrcFileBgcMakeCompileBody(void)
{
	blnr IsAsmFile = HaveAsm && ((DoSrcFile_gd()->Flgm & kCSrcFlgmAsmAvail) != 0);

	WriteBgnDestFileLn();
	if (IsAsmFile) {
		WriteCStrToDestFile("$(mk_CallA) ");
	} else {
		WriteCStrToDestFile("$(mk_CallC) ");
	}
	WriteQuoteToDestFile();
	WriteSrcFileFilePath();
	WriteQuoteToDestFile();
	WriteCStrToDestFile(" -o ");
	WriteQuoteToDestFile();
	WriteSrcFileObjPath();
	WriteQuoteToDestFile();
	if (IsAsmFile) {
		WriteCStrToDestFile(" $(mk_AOptions)");
	} else {
		WriteCStrToDestFile(" $(mk_COptions)");
	}
	WriteEndDestFileLn();
}

LOCALPROC DoSrcFileBgcMakeCompile(void)
{
	WriteMakeRule(WriteSrcFileObjPath,
		DoSrcFileMakeCompileDeps,
		DoSrcFileBgcMakeCompileBody);
}

LOCALPROC DoSrcFileBgcMakeObjects(void)
{
	WriteBgnDestFileLn();
	WriteSrcFileObjPath();
	WriteCStrToDestFile(" ");
	WriteBackSlashToDestFile();
	WriteEndDestFileLn();
}

static void WriteBgcCOptions(blnr fast)
{
	WriteCStrToDestFile(" -c -Wall -Wmissing-prototypes -Wstrict-prototypes -Wno-uninitialized");
	if (cur_ide == gbk_ide_xcd) {
		WriteCStrToDestFile(" -mdynamic-no-pic -fpascal-strings");
#if UseAlignMac68k
		WriteCStrToDestFile(" -malign-mac68k");
#endif
		/* if (CrossCompile) */ {
			if (gbo_cpufam == gbk_cpufam_x86) {
				WriteCStrToDestFile(" -arch i386");
				WriteCStrToDestFile(" -mmacosx-version-min=10.4");
			} else {
				WriteCStrToDestFile(" -arch ppc");
				WriteCStrToDestFile(" -mmacosx-version-min=10.1");
			}
			WriteCStrToDestFile(" -isysroot /Developer/SDKs/MacOSX10.4u.sdk");
		}
	}
	if (gbo_dbg != gbk_dbg_on) {
		if (fast) {
			WriteCStrToDestFile(" -O3");
		} else {
			WriteCStrToDestFile(" -Os");
		}
	} else {
		WriteCStrToDestFile(" -g -O0");
	}

	if (cur_ide == gbk_ide_xcd) {
		if (gbo_apifam == gbk_apifam_xwn) {
			WriteCStrToDestFile(" -I/usr/X11R6/include/");
		}
	}
}

LOCALPROC DoFrameWorkBGCaddFile(void)
{
	WriteBgnDestFileLn();
	WriteCStrToDestFile("-framework ");
	WriteCStrToDestFile(DoFrameWork_gd()->s);
	WriteCStrToDestFile(" \\");
	WriteEndDestFileLn();
}

LOCALPROC Write_machoRsrcBgcDeps(void)
{
	WriteMakeDependFile(WriteMainRsrcSrcPath);
	WriteMakeDependFile(Write_machoAppIconPath);
}

LOCALPROC Write_machoRsrcBgcBuild(void)
{
	WriteDestFileLn("/Developer/Tools/Rez \\");
	++DestFileIndent;
		WriteDestFileLn("-i /Developer/Headers/FlatCarbon \\");
		WriteBgnDestFileLn();
			WriteCStrToDestFile("\"");
			WriteMainRsrcSrcPath();
			WriteCStrToDestFile("\" \\");
		WriteEndDestFileLn();
		WriteBgnDestFileLn();
			WriteCStrToDestFile("-o \"");
			Write_machoRsrcPath();
			WriteCStrToDestFile("\" \\");
		WriteEndDestFileLn();
		WriteDestFileLn("-useDF");
	--DestFileIndent;
}

static void WriteBashGccSpecificFiles(void)
{
	if (HaveMacBundleApp) {
		WritePListData();
	}

	if (WriteOpenDestFile(&OutputDirR, "Makefile", "")) { /* Make file */

	WriteDestFileLn("# make file generated by gryphel build system");

	WriteBlankLineToDestFile();
	if (HaveAsm) {
		WriteDestFileLn("mk_CallA = gcc");
		WriteBgnDestFileLn();
		WriteCStrToDestFile("mk_AOptions = -c");
		if (cur_ide == gbk_ide_xcd) {
			/* if (CrossCompile) */ {
				if (gbo_cpufam == gbk_cpufam_x86) {
					WriteDestFileLn(" -arch i386");
				} else {
					WriteDestFileLn(" -arch ppc");
				}
			}
		}
		WriteEndDestFileLn();
	}
	WriteDestFileLn("mk_CallC = gcc");
	WriteBgnDestFileLn();
	WriteCStrToDestFile("mk_COptions =");
	WriteBgcCOptions(falseblnr);
	WriteEndDestFileLn();
	WriteBlankLineToDestFile();

	WriteBgnDestFileLn();
	WriteCStrToDestFile("TheApplication : ");
	Write_machobinpath_ToDestFile();
	if (HaveMacRrscs) {
		WriteCStrToDestFile(" ");
		Write_machoRsrcPath();
	}
	WriteEndDestFileLn();

	WriteBlankLineToDestFile();
	DoAllSrcFilesWithSetup(DoSrcFileBgcMakeCompile);
	WriteBlankLineToDestFile();
	WriteBgnDestFileLn();
	WriteCStrToDestFile("ObjFiles = ");
	WriteBackSlashToDestFile();
	WriteEndDestFileLn();
	++DestFileIndent;
		DoAllSrcFilesWithSetup(DoSrcFileBgcMakeObjects);
		WriteBlankLineToDestFile();
	--DestFileIndent;
	if (HaveMacBundleApp) {
		WriteBlankLineToDestFile();
		WriteMakeRule(Write_machoAppIconPath,
			Write_tmachoShellDeps,
			Write_tmachoShell);
	}
	WriteBlankLineToDestFile();
	WriteBgnDestFileLn();
	Write_machobinpath_ToDestFile();
	WriteCStrToDestFile(" : $(ObjFiles)");
	if (HaveMacBundleApp) {
		WriteMakeDependFile(Write_machoAppIconPath);
	}
	WriteEndDestFileLn();
	++DestFileIndent;
		WriteDestFileLn("gcc \\");
		++DestFileIndent;
			WriteBgnDestFileLn();
			WriteCStrToDestFile("-o \"");
			Write_machobinpath_ToDestFile();
			WriteCStrToDestFile("\" \\");
			WriteEndDestFileLn();

			if (HaveMacBundleApp) {
				DoAllFrameWorksWithSetup(DoFrameWorkBGCaddFile);
			} else {
				WriteBgnDestFileLn();
				WriteCStrToDestFile("-L/usr/X11R6/lib -lXext -lX11");
				if (MySoundEnabled) {
					WriteCStrToDestFile(" -lasound");
				}
				WriteCStrToDestFile(" \\");
				WriteEndDestFileLn();
			}
			if (/* CrossCompile && */ cur_ide == gbk_ide_xcd) {
				if (gbo_cpufam == gbk_cpufam_x86) {
					WriteDestFileLn("-arch i386 \\");
					WriteDestFileLn("-mmacosx-version-min=10.4 \\");
				} else {
					WriteDestFileLn("-arch ppc \\");
					WriteDestFileLn("-mmacosx-version-min=10.1 \\");
				}
				WriteDestFileLn("-isysroot /Developer/SDKs/MacOSX10.4u.sdk \\");
			}
			WriteDestFileLn("$(ObjFiles)");
		--DestFileIndent;
		if (gbo_dbg == gbk_dbg_off) {
			if (cur_ide == gbk_ide_xcd) {
				WriteBgnDestFileLn();
				WriteCStrToDestFile("strip -u -r \"");
				Write_machobinpath_ToDestFile();
				WriteCStrToDestFile("\"");
				WriteEndDestFileLn();
			}
		}
	--DestFileIndent;

	if (HaveMacRrscs) {
		WriteBlankLineToDestFile();
		WriteMakeRule(Write_machoRsrcPath,
			Write_machoRsrcBgcDeps,
			Write_machoRsrcBgcBuild);
	}

	if (/* CrossCompile && */ HaveMacBundleApp) {
		WriteBlankLineToDestFile();
		WriteDestFileLn("universal : TheApplication");
		++DestFileIndent;
			WriteRmDir(Write_umachobun_d_ToDestFile);

			WriteBgnDestFileLn();
			WriteCStrToDestFile("ditto \"");
			Write_machobun_d_ToDestFile();
			WriteCStrToDestFile("\" \"");
			Write_umachobun_d_ToDestFile();
			WriteCStrToDestFile("\"");
			WriteEndDestFileLn();

			WriteBgnDestFileLn();
			WriteCStrToDestFile("lipo -create \"");
			Write_machobinpath_ToDestFile();
			WriteCStrToDestFile("\" \"merge.app/Contents/MacOS/");
			WriteStrAppAbbrev();
			WriteCStrToDestFile("\" -output \"");
			Write_umachobinpath_ToDestFile();
			WriteCStrToDestFile("\"");
			WriteEndDestFileLn();
		--DestFileIndent;
	}

	WriteBlankLineToDestFile();
	WriteDestFileLn("clean :");
	++DestFileIndent;
		WriteDestFileLn("rm -f $(ObjFiles)");
		if (HaveMacBundleApp) {
			WriteRmDir(Write_machobun_d_ToDestFile);
		} else {
			WriteBgnDestFileLn();
			WriteCStrToDestFile("rm -f \"");
			WriteStrAppAbbrev();
			WriteCStrToDestFile("\"");
			WriteEndDestFileLn();
		}
	--DestFileIndent;

	WriteCloseDestFile();
	}
}
